version: '3.9'

services:
    api:
        build: .
        command: sh -c "yarn run postinstall && yarn build && yarn prod && tail -f /dev/null"
        volumes:
            - ./:/app
            - /app/node_modules
        expose:
            - '4000'
        ports:
            - 4000:4000
        depends_on:
            postgres:
                condition: service_healthy
        restart: always
        environment:
            - NODE_ENV=production
        networks:
            grape:
    postgres:
        image: postgres
        user: postgres
        hostname: postgres
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        restart: always
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready']
            interval: 15s
            timeout: 300s
            retries: 25
        networks:
            grape:
        volumes:
            - database-volume:/var/lib/postgresql/data
        expose:
            - '5432'

    client:
        build: ../2203-wns-pairet-compito-front
        command: sh -c "yarn build &&  tail -f /dev/null"
        ports:
            - 3000:3000
        depends_on:
            - api
        volumes:
            - web-client-build:/app/build
        restart: always
        environment:
            - NODE_ENV=production
        networks:
            grape:

    nginx:
        image: nginx:1.21.3
        depends_on:
            - api
            - client
        restart: always
        ports:
            - ${GATEWAY_PORT:-8000}:80
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
            - web-client-build:/web-client-build
            - ./logs:/var/log/nginx
        networks:
            grape:

volumes:
    web-client-build:
    database-volume:
networks:
    grape:
